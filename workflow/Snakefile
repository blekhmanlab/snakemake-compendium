report: "report/workflow.rst"
#configfile: "config/config.yaml"

with open('SraAccList.txt', 'r') as file:
    samples = file.read().splitlines()

shell.executable("/bin/sh") # sra-tools container doesn't have bash

rule all:
    input:
        'ASVs.fa', 'ASVs_counts.tsv', 'ASVs_taxonomy.tsv'

rule sra_prefetch:
    input:
        'SraAccList.txt'
    output:
        expand('{sample}/{sample}.sra',sample=samples)
    container:
        'docker://ncbi/sra-tools:3.0.1'
    threads: 1
    retries: 3
    resources:
        mem_mb=500,
        runtime=480
    shell:
        'prefetch --option-file {input}'

rule sra_to_fastq:
    input:
        '{sample}/{sample}.sra'
    output:
        'fastq/{sample}.fastq'
    container:
        'docker://ncbi/sra-tools:3.0.1'
    threads: 4
    resources:
        mem_mb=2000,
        runtime=480
    shell:
        """
            fasterq-dump --skip-technical --mem 1GB --threads 4 --split-files -O fastq/ {wildcards.sample}
            mv {wildcards.sample}_1.fastq {wildcards.sample}.fastq | true
        """
    # run:   # "run" directives don't work with Singularity
    #     # Split the SRA file into FASTQ files
    #     shell("fasterq-dump --skip-technical --mem 1GB --threads 4 --split-files -O fastq/ {wildcards.sample}")
    #     # then remove the "_1" from any fastq file names
    #     # (This is done because single-end projects inconsistently have this appended to the sample
    #     # names, and it's easier to search for files that HAVE an extra "_1" than files that don't.)
    #     for old in os.listdir('fastq'):
    #         new = file.replace('_1.fastq', '.fastq')
    #         if new != old:
    #             os.rename(old, new)

def get_mem_mb_filter(wildcards, attempt):
    tiers = [16, 24, 48, 64] # in gigabytes
    return tiers[attempt-1] * 1000

rule filter:
    retries: 3
    input:
        expand('fastq/{sample}.fastq', sample=samples)
    output:
        expand('intermediate/{sample}.R1.filtered.fastq.gz', sample=samples),
        'filtered_out.rds'
    threads: 8
    retries: 3
    resources:
        mem_mb=get_mem_mb_filter,
        runtime=1440
    shell:
        'singularity exec --bind /panfs/roc/groups/7/blekhman/shared/cmanager /panfs/roc/groups/7/blekhman/shared/cmanager/resources/dada2_1.14.0a.sif Rscript scripts/filter.R'
    #container:
    #    'docker://blekhmanlab/dada2:1.18.0'
    #shell:
    #    'Rscript scripts/process_paired_end.R'

def get_mem_mb_errormodel(wildcards, attempt):
    tiers = [16, 32, 64, 96]
    return tiers[attempt-1] * 1000

rule errormodel:
    input:
        expand('intermediate/{sample}.R1.filtered.fastq.gz', sample=samples),
        'filtered_out.rds'
    output:
        'err_forward_reads.rds',
        'forward_error_model.pdf'
    threads: 8
    retries: 3
    resources:
        mem_mb=get_mem_mb_errormodel,
        runtime=1440
    shell:
        'singularity exec --bind /panfs/roc/groups/7/blekhman/shared/cmanager /panfs/roc/groups/7/blekhman/shared/cmanager/resources/dada2_1.14.0a.sif Rscript scripts/error_models.R'

def get_mem_mb_dada(wildcards, attempt):
    if len(samples) < 50:
        tiers = [16, 32, 48, 56]
    elif len(samples) < 150:
        tiers = [32, 48, 56, 72]
    elif len(samples) < 400:
        tiers = [48, 64, 96, 96]
    else:
        tiers = [64, 80, 96, 118]
    return(tiers[attempt-1] * 1000)

def get_runtime_dada(wildcards, attempt):
    tiers = [48, 64, 96, 96] # hours
    return(tiers[attempt-1] * 60)

rule make_asv_table:
    input:
        expand('intermediate/{sample}.R1.filtered.fastq.gz', sample=samples),
        'err_forward_reads.rds'
    output:
        'summary.tsv', 'ASV.tsv', 'asv.rds'
    threads: 8
    retries: 3
    resources:
        mem_mb=get_mem_mb_dada,
        runtime=get_runtime_dada
    shell:
        'singularity exec --bind /panfs/roc/groups/7/blekhman/shared/cmanager /panfs/roc/groups/7/blekhman/shared/cmanager/resources/dada2_1.14.0a.sif Rscript scripts/generate_asvs.R'

rule assign_taxonomy:
    input:
        'asv.rds', '/panfs/roc/groups/7/blekhman/shared/cmanager/resources/silva_nr99_v138_train_set.fa.gz'
    output:
        'ASVs.fa', 'ASVs_counts.tsv', 'ASVs_taxonomy.tsv'
    threads: 8
    retries: 3
    resources:
        mem_mb=get_mem_mb_dada,
        runtime=get_runtime_dada
    shell:
        'singularity exec --bind /panfs/roc/groups/7/blekhman/shared/cmanager /panfs/roc/groups/7/blekhman/shared/cmanager/resources/dada2_1.14.0a.sif Rscript scripts/assign_taxonomy.R'
